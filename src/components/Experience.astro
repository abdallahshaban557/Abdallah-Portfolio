---
const workExperiences = [
	{
		company: 'Celest',
		role: 'Co-Founder and Chief Product Officer',
		period: 'Nov 2023 - March 2024',
		responsibilities: [
			'Drove growth features',
			'Launched 4G/LTE services',
			'Boosted e-commerce revenue',
		],
	},
	{
		company: 'Amazon Web Services',
		role: 'Sr Product Manager',
		period: '2014 - 2018',
		responsibilities: [
			'Led development of e-commerce platform',
			'Improved operations efficiency by 30%',
			'Managed team of 10 developers',
		],
	},
];
---

<section class="mb-10 flex flex-col items-center justify-center bg-black py-8 text-white lg:my-16">
	<div class="mb-10 flex w-full flex-col items-center justify-center lg:mb-0 lg:w-1/2">
		<h2 class="font-monospace text-2xl text-orange lg:text-4xl">Work Experience</h2>
		<span class="mb-6 ml-2 h-1 w-10 bg-orange"></span>
	</div>
	<div class="container mx-auto px-4">
		<div class="mx-auto max-w-2xl">
			{
				workExperiences.map((job, index) => (
					<div class="accordion-item mb-4" data-index={index}>
						<button class="w-full overflow-hidden rounded-xl text-left transition-all duration-300 ease-in-out hover:scale-[1.02] focus:scale-[1.02] focus:outline-none">
							<div class="bg-gray-900 hover:bg-gray-800 p-4 transition-colors duration-300">
								<div class="flex items-center justify-between">
									<div>
										<h3 class="text-orange-500 text-xl font-bold">{job.company}</h3>
										<p class="text-gray-400 text-md">{job.role}</p>
									</div>
									<svg
										class="text-orange-500 h-6 w-6 transform transition-transform duration-300"
										fill="none"
										stroke="currentColor"
										viewBox="0 0 24 24"
										xmlns="http://www.w3.org/2000/svg"
									>
										<path
											stroke-linecap="round"
											stroke-linejoin="round"
											stroke-width="2"
											d="M19 9l-7 7-7-7"
										/>
									</svg>
								</div>
							</div>
						</button>
						<div class="accordion-content bg-gray-800 mt-2 rounded-xl p-4 transition-all duration-300 ease-in-out">
							<p class="text-gray-400 mb-2 text-sm">{job.period}</p>
							<ul class="text-gray-300 list-inside list-disc">
								{job.responsibilities.map((resp) => (
									<li class="mb-1">{resp}</li>
								))}
							</ul>
						</div>
					</div>
				))
			}
		</div>
	</div>
</section>

<script>
	document.addEventListener('DOMContentLoaded', () => {
		const accordionItems = document.querySelectorAll('.accordion-item');

		accordionItems.forEach((item) => {
			const button = item.querySelector('button');
			const content = item.querySelector('.accordion-content');
			const icon = button.querySelector('svg');

			button.addEventListener('click', () => {
				const isOpen = content.classList.toggle('is-open');
				icon.style.transform = isOpen ? 'rotate(180deg)' : 'rotate(0deg)';

				// Close other open items
				accordionItems.forEach((otherItem) => {
					if (otherItem !== item) {
						const otherContent = otherItem.querySelector('.accordion-content');
						const otherIcon = otherItem.querySelector('svg');
						otherContent.classList.remove('is-open');
						otherIcon.style.transform = 'rotate(0deg)';
					}
				});
			});
		});
	});
</script>

<style>
	.accordion-item button {
		border: 2px solid transparent;
		transition: border-color 0.3s ease-in-out;
	}

	.accordion-item button:hover,
	.accordion-item button:focus {
		border-color: #f97316;
	}

	.accordion-content {
		max-height: 0;
		opacity: 0;
		overflow: hidden;
		transition:
			max-height 0.3s ease-out,
			opacity 0.3s ease-out,
			padding 0.3s ease-out;
		padding-top: 0;
		padding-bottom: 0;
	}

	.accordion-content.is-open {
		max-height: 1000px; /* Adjust this value based on your content */
		opacity: 1;
		padding-top: 1rem;
		padding-bottom: 1rem;
		transition:
			max-height 0.5s ease-in,
			opacity 0.5s ease-in,
			padding 0.5s ease-in;
	}
</style>
