---
const workExperiences = [
    {
        company: 'Celest',
        role: 'Co-Founder & CPO',
        startDate: 'Nov 2023',
        endDate: 'Mar 2024',
        responsibilities: [
            'Launched PaaS for Dart backends',
            'Raised $527K in funding and participated in Y-Combinator',
            'Acquired 1,000+ Twitter followers, 500+ LinkedIn, and 800+ waitlist signups',
            'Closed deals with 12 paying customers',
            'Created tutorials and participated in podcasts & live streams'
        ],
    },
    {
        company: 'AWS',
        role: 'Sr. Product Manager',
        startDate: 'Oct 2021',
        endDate: 'Nov 2023',
        responsibilities: [
            'Led Amplify JS/Flutter SDKs, Auth, Analytics, Notifications',
            'Delivered In-App Messaging, Push Notifications, Auth/Analytics features (30% YoY growth)',
            'Improved documentation (25% reduction in open issues)',
            'Public speaking at podcasts, live streams, and conferences',
            'Trained Amazon Q code assistant AI'
        ],
    },
    {
        company: 'Petco',
        role: 'Sr. Product Manager',
        startDate: 'Jan 2017',
        endDate: 'Oct 2021',
        responsibilities: [
            'Led store employee app development ($3.5M/year savings)',
            'Hired & managed 3 product managers',
            'Launched Salesforce/Amazon Connect implementation (5% call deflection)',
            'Reduced subscription churn by 6% and fulfillment cost by 8%',
            'Enabled BOPIS, Curbside Pickup, Same Day Delivery, Ship from Store (35% YoY sales increase)'
        ],
    },
    {
        company: 'Zain',
        role: 'Product Manager',
        startDate: 'Jun 2013',
        endDate: 'Aug 2016',
        responsibilities: [
            'Launched the first 4G/LTE in Jordan',
            'Restructured self-service channels (600% YoY user growth)',
            'Increased digital subscription revenue by 20%',
            'Revamped project management processes (30% faster delivery)'
        ],
    }
];
---

<section class="mb-10 flex flex-col items-center justify-center py-8 lg:my-16" id="work">
    <div class="mb-10 flex w-full flex-col items-center justify-center lg:w-1/2">
        <h2 class="font-monospace text-2xl text-orange lg:text-4xl">Work Experience</h2>
        <span class="mb-6 ml-2 h-1 w-10 bg-orange"></span>
    </div>
    <div class="container mx-auto px-4 text-black dark:text-white">
        <div class="mx-auto max-w-2xl">
            {workExperiences.map((job, index) => (
                <div
                    class="accordion-item border-orange mb-4 overflow-hidden rounded-xl border-2 transition-all ease-in-out hover:scale-[1.02] "
                    data-index={index}
                >
                    <div class="dark:hover:bg-gray-800 cursor-pointer p-4 transition-colors duration-300">
                        <button class="w-full text-left focus:outline-none">
                            <div class="flex items-center justify-between">
                                <div>
                                    <h3 class="text-xl sm:text-xl font-bold">{job.company}</h3>
                                    <p class="text-md">{job.role}</p>
                                </div>
                                <div class="flex flex-col items-end md:flex-row"> <!-- Added a flex container to allow wrapping -->
                                    <p class="text-md mb-1 md:mb-0">{job.startDate}</p> <!-- Start date -->
                                    <p class="text-md mb-1 md:mb-0 md:ml-2 md:mr-2">/</p> <!-- Slash separator -->
                                    <p class="text-md mb-1 md:mb-0">{job.endDate}</p> <!-- End date -->
                                    <svg
                                        class="text-orange-500 h-6 w-6 transform transition-transform"
                                        fill="none"
                                        stroke="currentColor"
                                        viewBox="0 0 24 24"
                                        xmlns="http://www.w3.org/2000/svg"
                                    >
                                        <path
                                            stroke-linecap="round"
                                            stroke-linejoin="round"
                                            stroke-width="2"
                                            d="M19 9l-7 7-7-7"
                                        />
                                    </svg>
                                </div>
                            </div>
                        </button>
                    </div>
                    <div class="accordion-content mt-2 max-h-0 overflow-hidden rounded-xl pb-0 pt-0 opacity-0 transition-all duration-300 ease-in-out">
                        <div class="px-8">
                            <ul class="list-outside list-disc">
                                {job.responsibilities.map((resp) => (
                                    <li class="mb-1">{resp}</li>
                                ))}
                            </ul>
                        </div>
                    </div>
                </div>
            ))}
        </div>
    </div>
</section>


<script>
    document.addEventListener('DOMContentLoaded', () => {
        const accordionItems = document.querySelectorAll('.accordion-item');

        accordionItems.forEach((item) => {
            const content = item.querySelector('.accordion-content');
            const icon = item.querySelector('svg');
            const button = item.querySelector('.cursor-pointer button'); // Update the button selector

            if (button && content && icon) {
                button.addEventListener('click', () => {
                    const isOpen = content.classList.toggle('is-open');

                    if (isOpen) {
                        content.classList.remove('max-h-0', 'opacity-0', 'pt-0', 'pb-0');
                        content.classList.add('max-h-[1000px]', 'opacity-100', 'pt-4', 'pb-4');
                        icon.classList.add('rotate-180');
                    } else {
                        content.classList.add('max-h-0', 'opacity-0', 'pt-0', 'pb-0');
                        content.classList.remove('max-h-[1000px]', 'opacity-100', 'pt-4', 'pb-4');
                        icon.classList.remove('rotate-180');
                    }

                    accordionItems.forEach((otherItem) => {
                        if (otherItem !== item) {
                            const otherContent = otherItem.querySelector('.accordion-content');
                            const otherIcon = otherItem.querySelector('svg');
                            if (otherContent && otherIcon) {
                                otherContent.classList.remove(
                                    'is-open',
                                    'max-h-[1000px]',
                                    'opacity-100',
                                    'pt-4',
                                    'pb-4'
                                );
                                otherContent.classList.add('max-h-0', 'opacity-0', 'pt-0', 'pb-0');
                                otherIcon.classList.remove('rotate-180');
                            }
                        }
                    });
                });
            }
        });
    });
</script>